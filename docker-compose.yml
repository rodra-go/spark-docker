---
# ----------------------------------------------------------------------------------------
# -- Docs: https://github.com/cluster-apps-on-docker/spark-standalone-cluster-on-docker --
# ----------------------------------------------------------------------------------------
version: "3.7"
volumes:
  shared-workspace:
    name: "hadoop-distributed-file-system"
    driver: local
    driver_opts:
      type: none
      device: /home/rodra/workspace/spark-standalone-cluster-on-docker/virtual_hpfs
      o: bind
  metastore_db:
    name: "spark_metastore_db"
  hadoop_namenode:
    name: "spark_hdfs_namenode"
  hadoop_datanode:
    name: "spark_hdfs_datanode"
  hadoop_historyserver:
    name: "spark_hdfs_historyserver"


services:
  jupyterlab:
    image: jupyterlab:3.0.0-spark-3.0.0
    container_name: jupyterlab
    ports:
      - 8889:8888
      - 4040:4040
    volumes:
      - shared-workspace:/opt/workspace
    networks:
      spark-network:

  metastore_db:
    container_name: metastore_db
    restart: always
    image: mysql:8.0.16-hive-2.3.0
    build: build/docker/mysql_metastore_db
    shm_size: '2gb'
    environment:
      MYSQL_DATABASE: 'metastore_db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    volumes:
      - metastore_db:/var/lib/mysql
    networks:
      spark-network:

  spark-master:
    image: spark-master:3.0.0
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    volumes:
      - shared-workspace:/opt/workspace
    networks:
      spark-network:

  spark-worker-1:
    image: spark-worker:3.0.0
    container_name: spark-worker-1
    environment:
      # - SPARK_WORKER_CORES=1
      # - SPARK_WORKER_MEMORY=512m
      - SPARK_WORKER_CORES=16
      - SPARK_WORKER_MEMORY=2048m
    ports:
      - 8081:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
    networks:
      spark-network:

  spark-worker-2:
    image: spark-worker:3.0.0
    container_name: spark-worker-2
    environment:
      # - SPARK_WORKER_CORES=1
      # - SPARK_WORKER_MEMORY=512m
      - SPARK_WORKER_CORES=16
      - SPARK_WORKER_MEMORY=2048m
    ports:
      - 8082:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
    networks:
      spark-network:

  namenode:
    image: hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./build/docker/hadoop.env
    networks:
      spark-network:

  datanode:
    image: hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./build/docker/hadoop.env
    networks:
      spark-network:

  resourcemanager:
    image: hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./build/docker/hadoop.env
    networks:
      spark-network:

  nodemanager1:
    image: hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./build/docker/hadoop.env
    networks:
      spark-network:

  historyserver:
    image: hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./build/docker/hadoop.env
    networks:
      spark-network:

networks:
  # spark-network:
  #   driver: bridge
  #   ipam:
  #    driver: default
  #    config:
  #      - subnet: 10.5.0.0/16
  spark-network:
    driver: overlay
    attachable: true
    ipam:
       driver: default
       config:
         - subnet: 10.5.0.0/16
